#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "autoproof_Document.headers.fc";
#include "autoproof_Document.stdlib.fc";
#include "autoproof_Document.constants.fc";
#include "autoproof_Document.storage.fc";

;;
;; Contract Document functions
;;

(slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $Document$_contract_init(slice $parent, int $seqno, slice $author, (slice, slice, slice, slice, slice) $document, (int, int) $commissions, slice $royaltyWalletAddress) impure inline_ref {
    var (($document'authorship, $document'description, $document'rootHash, $document'data, $document'tags)) = $document;
    var (($commissions'transfershipCommissionPercentage, $commissions'royaltyCommissionPercentage)) = $commissions;
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = (null(), null(), null(), null(), null(), null(), null(), null(), null(), null());
    $self'parent = $parent;
    $self'seqno = $seqno;
    $self'author = $author;
    $self'exclusiveRightsOwner = $author;
    ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags) = ($document'authorship, $document'description, $document'rootHash, $document'data, $document'tags);
    ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage) = ($commissions'transfershipCommissionPercentage, $commissions'royaltyCommissionPercentage);
    $self'royaltyWalletAddress = $royaltyWalletAddress;
    return ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags));
}

() $global_validateCommissions((int, int) $commissions) impure inline_ref {
    var (($commissions'transfershipCommissionPercentage, $commissions'royaltyCommissionPercentage)) = $commissions;
    throw_unless(23942, ($commissions'transfershipCommissionPercentage >= 0));
    throw_unless(31610, ($commissions'transfershipCommissionPercentage <= 1000));
    throw_unless(21449, ($commissions'royaltyCommissionPercentage >= 0));
    throw_unless(11428, ($commissions'royaltyCommissionPercentage <= 1000));
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), (int, int)) $Document$_fun_currentCommissions((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage));
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_fun_currentTransfershipCommissionPercentage((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'commissions'transfershipCommissionPercentage);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_fun_currentRoyaltyCommissionPercentage((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'commissions'royaltyCommissionPercentage);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_fun_currentCost((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'cost);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), tuple) $Document$_fun_currentClaim((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'currentClaim);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), slice) $Document$_fun_author((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'author);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), slice) $Document$_fun_exclusiveRightsOwner((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'exclusiveRightsOwner);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), (slice, slice, slice, slice, slice)) $Document$_fun_documentData((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags));
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), slice) $Document$_fun_assignmentHash((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), $self'assignmentHash);
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_fun_transfershipCommission((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    if ((~ null?($self'cost))) {
        return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ((__tact_not_null($self'cost) / 1000) * ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_currentTransfershipCommissionPercentage()));
    } else {
        return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), 0);
    }
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_fun_royaltyCommission((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    if ((~ null?($self'cost))) {
        return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ((__tact_not_null($self'cost) / 1000) * ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_currentRoyaltyCommissionPercentage()));
    } else {
        return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), 0);
    }
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_fun_summedCommission((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline_ref {
    var (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))) = $self;
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_transfershipCommission() + ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_royaltyCommission()));
}

;;
;; Receivers of a Contract Document
;;

(((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice))), ()) $Document$_internal_binary_SetCost((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self, (int) $msg) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    var ($msg'cost) = $msg;
    throw_unless(5688, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'exclusiveRightsOwner) ));
    throw_unless(19102, null?($self'currentClaim));
    $self'cost = $msg'cost;
    ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_reply(__gen_cell_comment_a24d893b68056ad3627081dd73aacc5ab96ab402e7b838b57661cc9f23b84206());
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), ()) $Document$_internal_text_8b659ceff9a6a3c20aa31a7bb878a3a04fb8b758f0079c869f0f4fb7d071b14e((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    throw_unless(14555, (~ null?($self'cost)));
    throw_unless(21953, ($Context$_get_value(__tact_context_get()) > (__tact_not_null($self'cost) + ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_summedCommission())));
    throw_unless(19102, null?($self'currentClaim));
    $self'currentClaim = $ExclusiveRightsClaim$_as_optional($ExclusiveRightsClaim$_constructor_author_amount_sentDocuments_viewedDocuments(__tact_context_get_sender(), $Context$_get_value(__tact_context_get()), false, false));
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), ()) $Document$_internal_text_b9f1ba120cb2ba414dc6e46ab801c29fa13c4d7f1e91726f63f55ec0b168b103((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    throw_unless(41504, (~ null?($self'currentClaim)));
    throw_unless(44565, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'exclusiveRightsOwner) ));
    $self'currentClaim = $ExclusiveRightsClaim$_as_optional($ExclusiveRightsClaim$_constructor_author_amount_sentDocuments_viewedDocuments($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)), true, false));
    ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_reply(__gen_cell_comment_91db6867d6e167dc48da6f7979c03cd08953f1fd4fae52d5f0c7b5edda22884f());
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), ()) $Document$_internal_text_65571b87ca1035c906804ffbc83341f4b4fd3a4aed474c05f6fa70d45ab5e549((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    throw_unless(41504, (~ null?($self'currentClaim)));
    throw_unless(61716, ( __tact_slice_eq_bits(__tact_context_get_sender(), $ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim))) ));
    throw_unless(19201, $ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    $self'currentClaim = $ExclusiveRightsClaim$_as_optional($ExclusiveRightsClaim$_constructor_author_amount_sentDocuments_viewedDocuments($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)), true, true));
    ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_reply(__gen_cell_comment_d3526fc811cf6634c81b150ab6e3cf0448fc8e81e4d8304badf3a835cdc0423b());
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

(((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice))), ()) $Document$_internal_binary_ClaimApproval((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self, (slice) $msg) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    var ($msg'assignmentHash) = $msg;
    throw_unless(7765, (~ null?($self'currentClaim)));
    throw_unless(30316, $ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    throw_unless(23073, $ExclusiveRightsClaim$_get_viewedDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    throw_unless(3861, ( __tact_slice_eq_bits($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_value_bounce_body($self'exclusiveRightsOwner, $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)), false, __gen_cell_comment_b46e5aff89477cef681bdcd8d8b06e707cbcdaa00c24228e98bf3ad1fdf8d64c()));
    if ((~ null?($self'royaltyWalletAddress))) {
        $global_send($SendParameters$_constructor_to_value_bounce_body(__tact_not_null($self'royaltyWalletAddress), ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_royaltyCommission(), false, __gen_cell_comment_a1a55be61bff6dd5f0f64eec10bb1b13083eb1ad3bd72c53228ea826445f5c92()));
    }
    int $autoproofCommission = (null?($self'royaltyWalletAddress) ? ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_summedCommission() : ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_transfershipCommission());
    $global_send($SendParameters$_constructor_to_value_bounce_body($self'parent, $autoproofCommission, false, __gen_cell_comment_bd417ae69986f41c9e3c311f8930a86cc7b1c0a7266c3fc5854255da54b73d7e()));
    $self'exclusiveRightsOwner = __tact_context_get_sender();
    $self'assignmentHash = $msg'assignmentHash;
    $self'cost = null();
    $self'currentClaim = null();
    ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_reply(__gen_cell_comment_b568618b8739d2a97859562b568432367a049473a3531505c060c1948e91ba41());
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), ()) $Document$_internal_text_58e356d53cea1ec53a635a2191d2f2ffad4f2274af01079b33e4e88295167ac4((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    throw_unless(7782, (~ null?($self'currentClaim)));
    if (( ~ __tact_slice_eq_bits($self'parent, __tact_context_get_sender()) )) {
        throw_unless(50544, ( (( __tact_slice_eq_bits($self'exclusiveRightsOwner, __tact_context_get_sender()) )) ? (true) : (( __tact_slice_eq_bits($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), __tact_context_get_sender()) )) ));
        throw_unless(53932, ( (($ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)) == false)) ? (true) : (( ($ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim))) ? ($ExclusiveRightsClaim$_get_viewedDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim))) : (false) )) ));
    }
    $global_send($SendParameters$_constructor_to_value_bounce_body($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), ($ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)) + ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_summedCommission()), false, __gen_cell_comment_3ecc56424eae26fb2057e77fc13803917f73e6a91a7e5b542f0e2c56da70cd01()));
    $self'currentClaim = null();
    ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags))~$Document$_fun_reply(__gen_cell_comment_7bcf1cb8246d0fb1f98ccbb1b4e387d55fe728b52756389c67687a576907b365());
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

(((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice))), ()) $Document$_internal_binary_SetCommissions((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self, ((int, int), slice) $msg) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    var (($msg'commissions'transfershipCommissionPercentage, $msg'commissions'royaltyCommissionPercentage), $msg'documentAddress) = $msg;
    throw_unless(48939, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'parent) ));
    $global_validateCommissions(($msg'commissions'transfershipCommissionPercentage, $msg'commissions'royaltyCommissionPercentage));
    ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage) = ($msg'commissions'transfershipCommissionPercentage, $msg'commissions'royaltyCommissionPercentage);
    $global_send($SendParameters$_constructor_to_value_body(__tact_context_get_sender(), $Context$_get_value(__tact_context_get()), __gen_cell_comment_6103e86002c4636a8d77df79a7d1a17097a99e41cecb074abce3ed0cb153ddd3()));
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

(((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice))), ()) $Document$_internal_binary_GetFunds((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) $self, (int) $msg) impure inline {
    var ($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)) = $self;
    var ($msg'amount) = $msg;
    throw_unless(19061, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'exclusiveRightsOwner) ));
    int $currentClaimAmount = (null?($self'currentClaim) ? 0 : $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    throw_unless(8086, ((__tact_my_balance() - $currentClaimAmount) > $msg'amount));
    $global_send($SendParameters$_constructor_to_value_body(__tact_context_get_sender(), $msg'amount, __gen_cell_comment_3732868cf69df09fbb4e4fc919f0437763aa85503e8e4485543dc7ffa417f1d7()));
    return (($self'parent, $self'seqno, ($self'commissions'transfershipCommissionPercentage, $self'commissions'royaltyCommissionPercentage), $self'author, $self'exclusiveRightsOwner, $self'royaltyWalletAddress, $self'cost, $self'currentClaim, $self'assignmentHash, ($self'document'authorship, $self'document'description, $self'document'rootHash, $self'document'data, $self'document'tags)), ());
}

;;
;; Get methods of a Contract Document
;;

_ %currentCommissions() method_id(104324) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentCommissions();
    return $Commissions$_to_external(res);
}

_ %currentTransfershipCommissionPercentage() method_id(72344) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentTransfershipCommissionPercentage();
    return res;
}

_ %currentRoyaltyCommissionPercentage() method_id(66726) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentRoyaltyCommissionPercentage();
    return res;
}

_ %currentCost() method_id(96567) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentCost();
    return res;
}

_ %currentClaim() method_id(108101) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentClaim();
    return $ExclusiveRightsClaim$_to_opt_external(res);
}

_ %author() method_id(121830) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_author();
    return res;
}

_ %exclusiveRightsOwner() method_id(77639) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_exclusiveRightsOwner();
    return res;
}

_ %documentData() method_id(71441) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_documentData();
    return $DocumentData$_to_external(res);
}

_ %assignmentHash() method_id(67514) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_assignmentHash();
    return res;
}

_ %summedCommission() method_id(108305) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_summedCommission();
    return res;
}

_ %transfershipCommission() method_id(106294) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_transfershipCommission();
    return res;
}

_ %royaltyCommission() method_id(117581) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_royaltyCommission();
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Document
;;

((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)), int) $Document$_contract_router_internal((slice, int, (int, int), slice, slice, slice, int, tuple, slice, (slice, slice, slice, slice, slice)) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive SetCost message
    if (op == 2434905007) {
        var msg = in_msg~$SetCost$_load();
        self~$Document$_internal_binary_SetCost(msg);
        return (self, true);
    }
    
    ;; Receive ClaimApproval message
    if (op == 774961926) {
        var msg = in_msg~$ClaimApproval$_load();
        self~$Document$_internal_binary_ClaimApproval(msg);
        return (self, true);
    }
    
    ;; Receive SetCommissions message
    if (op == 1263034725) {
        var msg = in_msg~$SetCommissions$_load();
        self~$Document$_internal_binary_SetCommissions(msg);
        return (self, true);
    }
    
    ;; Receive GetFunds message
    if (op == 170958879) {
        var msg = in_msg~$GetFunds$_load();
        self~$Document$_internal_binary_GetFunds(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "claim-rights-transfer" message
        if (text_op == 0x8b659ceff9a6a3c20aa31a7bb878a3a04fb8b758f0079c869f0f4fb7d071b14e) {
            self~$Document$_internal_text_8b659ceff9a6a3c20aa31a7bb878a3a04fb8b758f0079c869f0f4fb7d071b14e();
            return (self, true);
        }
        
        ;; Receive "sent-documents" message
        if (text_op == 0xb9f1ba120cb2ba414dc6e46ab801c29fa13c4d7f1e91726f63f55ec0b168b103) {
            self~$Document$_internal_text_b9f1ba120cb2ba414dc6e46ab801c29fa13c4d7f1e91726f63f55ec0b168b103();
            return (self, true);
        }
        
        ;; Receive "viewed-documents" message
        if (text_op == 0x65571b87ca1035c906804ffbc83341f4b4fd3a4aed474c05f6fa70d45ab5e549) {
            self~$Document$_internal_text_65571b87ca1035c906804ffbc83341f4b4fd3a4aed474c05f6fa70d45ab5e549();
            return (self, true);
        }
        
        ;; Receive "cancel" message
        if (text_op == 0x58e356d53cea1ec53a635a2191d2f2ffad4f2274af01079b33e4e88295167ac4) {
            self~$Document$_internal_text_58e356d53cea1ec53a635a2191d2f2ffad4f2274af01079b33e4e88295167ac4();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Document$_contract_load();
    
    ;; Handle operation
    int handled = self~$Document$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Document$_contract_store(self);
}
