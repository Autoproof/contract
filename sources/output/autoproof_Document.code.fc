#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "autoproof_Document.headers.fc";
#include "autoproof_Document.stdlib.fc";
#include "autoproof_Document.constants.fc";
#include "autoproof_Document.storage.fc";

;;
;; Contract Document functions
;;

(slice, int, int, tuple, slice, slice, tuple) $Document$_contract_init(slice $parent, int $seqno, slice $author) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = (null(), null(), null(), null(), null(), null(), null());
    $self'parent = $parent;
    $self'seqno = $seqno;
    $self'author = $author;
    $self'exclusiveRightsOwner = $author;
    return ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document);
}

((slice, int, int, tuple, slice, slice, tuple), int) $Document$_fun_currentCost((slice, int, int, tuple, slice, slice, tuple) $self) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = $self;
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), $self'cost);
}

((slice, int, int, tuple, slice, slice, tuple), tuple) $Document$_fun_currentClaim((slice, int, int, tuple, slice, slice, tuple) $self) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = $self;
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), $self'currentClaim);
}

((slice, int, int, tuple, slice, slice, tuple), slice) $Document$_fun_author((slice, int, int, tuple, slice, slice, tuple) $self) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = $self;
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), $self'author);
}

((slice, int, int, tuple, slice, slice, tuple), slice) $Document$_fun_exclusiveRightsOwner((slice, int, int, tuple, slice, slice, tuple) $self) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = $self;
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), $self'exclusiveRightsOwner);
}

((slice, int, int, tuple, slice, slice, tuple), tuple) $Document$_fun_documentData((slice, int, int, tuple, slice, slice, tuple) $self) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = $self;
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), $self'document);
}

((slice, int, int, tuple, slice, slice, tuple), int) $Document$_fun_commission((slice, int, int, tuple, slice, slice, tuple) $self) impure inline_ref {
    var (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)) = $self;
    if ((~ null?($self'cost))) {
        return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ((__tact_not_null($self'cost) / 100) * 10));
    } else {
        return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), 0);
    }
}

;;
;; Receivers of a Contract Document
;;

(((slice, int, int, tuple, slice, slice, tuple)), ()) $Document$_internal_binary_DeclareDocument((slice, int, int, tuple, slice, slice, tuple) $self, ((slice, slice, slice, slice, slice)) $msg) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    var (($msg'document'authorship, $msg'document'description, $msg'document'rootHash, $msg'document'data, $msg'document'tags)) = $msg;
    throw_unless(48674, ( __tact_slice_eq_bits($self'parent, __tact_context_get_sender()) ));
    throw_unless(46455, null?($self'document));
    $self'document = $DocumentData$_as_optional(($msg'document'authorship, $msg'document'description, $msg'document'rootHash, $msg'document'data, $msg'document'tags));
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

(((slice, int, int, tuple, slice, slice, tuple)), ()) $Document$_internal_binary_SetCost((slice, int, int, tuple, slice, slice, tuple) $self, (int) $msg) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    var ($msg'cost) = $msg;
    throw_unless(5688, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'exclusiveRightsOwner) ));
    throw_unless(19102, null?($self'currentClaim));
    $self'cost = $msg'cost;
    ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_reply(__gen_cell_comment_a24d893b68056ad3627081dd73aacc5ab96ab402e7b838b57661cc9f23b84206());
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

((slice, int, int, tuple, slice, slice, tuple), ()) $Document$_internal_text_8b659ceff9a6a3c20aa31a7bb878a3a04fb8b758f0079c869f0f4fb7d071b14e((slice, int, int, tuple, slice, slice, tuple) $self) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    throw_unless(14555, (~ null?($self'cost)));
    throw_unless(21953, ($Context$_get_value(__tact_context_get()) > (__tact_not_null($self'cost) + ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_commission())));
    throw_unless(19102, null?($self'currentClaim));
    $self'currentClaim = $ExclusiveRightsClaim$_as_optional($ExclusiveRightsClaim$_constructor_author_amount_sentDocuments_viewedDocuments(__tact_context_get_sender(), $Context$_get_value(__tact_context_get()), false, false));
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

((slice, int, int, tuple, slice, slice, tuple), ()) $Document$_internal_text_b9f1ba120cb2ba414dc6e46ab801c29fa13c4d7f1e91726f63f55ec0b168b103((slice, int, int, tuple, slice, slice, tuple) $self) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    throw_unless(41504, (~ null?($self'currentClaim)));
    throw_unless(44565, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'exclusiveRightsOwner) ));
    $self'currentClaim = $ExclusiveRightsClaim$_as_optional($ExclusiveRightsClaim$_constructor_author_amount_sentDocuments_viewedDocuments($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)), true, false));
    ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_reply(__gen_cell_comment_91db6867d6e167dc48da6f7979c03cd08953f1fd4fae52d5f0c7b5edda22884f());
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

((slice, int, int, tuple, slice, slice, tuple), ()) $Document$_internal_text_65571b87ca1035c906804ffbc83341f4b4fd3a4aed474c05f6fa70d45ab5e549((slice, int, int, tuple, slice, slice, tuple) $self) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    throw_unless(41504, (~ null?($self'currentClaim)));
    throw_unless(61716, ( __tact_slice_eq_bits(__tact_context_get_sender(), $ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim))) ));
    throw_unless(19201, $ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    $self'currentClaim = $ExclusiveRightsClaim$_as_optional($ExclusiveRightsClaim$_constructor_author_amount_sentDocuments_viewedDocuments($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)), true, true));
    ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_reply(__gen_cell_comment_d3526fc811cf6634c81b150ab6e3cf0448fc8e81e4d8304badf3a835cdc0423b());
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

((slice, int, int, tuple, slice, slice, tuple), ()) $Document$_internal_text_2088bed5eb15098db31a789b138887229874eaf35590b3ca8550c4f300921634((slice, int, int, tuple, slice, slice, tuple) $self) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    throw_unless(7765, (~ null?($self'currentClaim)));
    throw_unless(30316, $ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    throw_unless(23073, $ExclusiveRightsClaim$_get_viewedDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)));
    throw_unless(3861, ( __tact_slice_eq_bits($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_value_mode_body($self'exclusiveRightsOwner, $ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)), 2, __gen_cell_comment_b46e5aff89477cef681bdcd8d8b06e707cbcdaa00c24228e98bf3ad1fdf8d64c()));
    $global_send($SendParameters$_constructor_to_value_bounce_mode_body($self'parent, ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_commission(), false, 2, __gen_cell_comment_bd417ae69986f41c9e3c311f8930a86cc7b1c0a7266c3fc5854255da54b73d7e()));
    $self'exclusiveRightsOwner = __tact_context_get_sender();
    $self'cost = null();
    $self'currentClaim = null();
    ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_reply(__gen_cell_comment_b568618b8739d2a97859562b568432367a049473a3531505c060c1948e91ba41());
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

((slice, int, int, tuple, slice, slice, tuple), ()) $Document$_internal_text_58e356d53cea1ec53a635a2191d2f2ffad4f2274af01079b33e4e88295167ac4((slice, int, int, tuple, slice, slice, tuple) $self) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    throw_unless(7782, (~ null?($self'currentClaim)));
    throw_unless(50544, ( (( __tact_slice_eq_bits($self'exclusiveRightsOwner, __tact_context_get_sender()) )) ? (true) : (( __tact_slice_eq_bits($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), __tact_context_get_sender()) )) ));
    throw_unless(53932, ( (($ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim)) == false)) ? (true) : (( ($ExclusiveRightsClaim$_get_sentDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim))) ? ($ExclusiveRightsClaim$_get_viewedDocuments($ExclusiveRightsClaim$_not_null($self'currentClaim))) : (false) )) ));
    $global_send($SendParameters$_constructor_to_value_mode_body($ExclusiveRightsClaim$_get_author($ExclusiveRightsClaim$_not_null($self'currentClaim)), ($ExclusiveRightsClaim$_get_amount($ExclusiveRightsClaim$_not_null($self'currentClaim)) + ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_commission()), 2, __gen_cell_comment_3ecc56424eae26fb2057e77fc13803917f73e6a91a7e5b542f0e2c56da70cd01()));
    $self'currentClaim = null();
    ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document)~$Document$_fun_reply(__gen_cell_comment_7bcf1cb8246d0fb1f98ccbb1b4e387d55fe728b52756389c67687a576907b365());
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

(((slice, int, int, tuple, slice, slice, tuple)), ()) $Document$_internal_binary_GetFunds((slice, int, int, tuple, slice, slice, tuple) $self, (int) $msg) impure inline {
    var ($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document) = $self;
    var ($msg'amount) = $msg;
    throw_unless(19061, ( __tact_slice_eq_bits(__tact_context_get_sender(), $self'exclusiveRightsOwner) ));
    throw_unless(35980, null?($self'currentClaim));
    throw_unless(8086, (__tact_my_balance() > $msg'amount));
    $global_send($SendParameters$_constructor_to_value_mode_body(__tact_context_get_sender(), $msg'amount, 2, __gen_cell_comment_3732868cf69df09fbb4e4fc919f0437763aa85503e8e4485543dc7ffa417f1d7()));
    return (($self'parent, $self'seqno, $self'cost, $self'currentClaim, $self'author, $self'exclusiveRightsOwner, $self'document), ());
}

;;
;; Get methods of a Contract Document
;;

_ %currentCost() method_id(96567) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentCost();
    return res;
}

_ %currentClaim() method_id(108101) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_currentClaim();
    return $ExclusiveRightsClaim$_to_opt_external(res);
}

_ %author() method_id(121830) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_author();
    return res;
}

_ %exclusiveRightsOwner() method_id(77639) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_exclusiveRightsOwner();
    return res;
}

_ %documentData() method_id(71441) {
    var self = $Document$_contract_load();
    var res = self~$Document$_fun_documentData();
    return $DocumentData$_to_opt_external(res);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmWA7cuDxtFBHt4f8UPVtKtixL6U8dF2dsdXC86Lq3frw6";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Document
;;

((slice, int, int, tuple, slice, slice, tuple), int) $Document$_contract_router_internal((slice, int, int, tuple, slice, slice, tuple) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive DeclareDocument message
    if (op == 1278208621) {
        var msg = in_msg~$DeclareDocument$_load();
        self~$Document$_internal_binary_DeclareDocument(msg);
        return (self, true);
    }
    
    ;; Receive SetCost message
    if (op == 2434905007) {
        var msg = in_msg~$SetCost$_load();
        self~$Document$_internal_binary_SetCost(msg);
        return (self, true);
    }
    
    ;; Receive GetFunds message
    if (op == 170958879) {
        var msg = in_msg~$GetFunds$_load();
        self~$Document$_internal_binary_GetFunds(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "claim-rights-transfer" message
        if (text_op == 0x8b659ceff9a6a3c20aa31a7bb878a3a04fb8b758f0079c869f0f4fb7d071b14e) {
            self~$Document$_internal_text_8b659ceff9a6a3c20aa31a7bb878a3a04fb8b758f0079c869f0f4fb7d071b14e();
            return (self, true);
        }
        
        ;; Receive "sent-documents" message
        if (text_op == 0xb9f1ba120cb2ba414dc6e46ab801c29fa13c4d7f1e91726f63f55ec0b168b103) {
            self~$Document$_internal_text_b9f1ba120cb2ba414dc6e46ab801c29fa13c4d7f1e91726f63f55ec0b168b103();
            return (self, true);
        }
        
        ;; Receive "viewed-documents" message
        if (text_op == 0x65571b87ca1035c906804ffbc83341f4b4fd3a4aed474c05f6fa70d45ab5e549) {
            self~$Document$_internal_text_65571b87ca1035c906804ffbc83341f4b4fd3a4aed474c05f6fa70d45ab5e549();
            return (self, true);
        }
        
        ;; Receive "approve" message
        if (text_op == 0x2088bed5eb15098db31a789b138887229874eaf35590b3ca8550c4f300921634) {
            self~$Document$_internal_text_2088bed5eb15098db31a789b138887229874eaf35590b3ca8550c4f300921634();
            return (self, true);
        }
        
        ;; Receive "cancel" message
        if (text_op == 0x58e356d53cea1ec53a635a2191d2f2ffad4f2274af01079b33e4e88295167ac4) {
            self~$Document$_internal_text_58e356d53cea1ec53a635a2191d2f2ffad4f2274af01079b33e4e88295167ac4();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Document$_contract_load();
    
    ;; Handle operation
    int handled = self~$Document$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Document$_contract_store(self);
}
